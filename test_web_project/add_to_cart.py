# import time
# import openpyxl
# from selenium import webdriver
# from selenium.webdriver.common.by import By
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.support.ui import WebDriverWait
# from selenium.webdriver.support import expected_conditions as EC
# from selenium.webdriver.common.action_chains import ActionChains

# # === C·∫§U H√åNH FILE ===
# excel_file = r"D:\Tester2\test_web_project\data_report\add_to_cart\product_test_cases.xlsx"
# report_file = r"D:\Tester2\test_web_project\data_report\add_to_cart\product_test_report.xlsx"

# # ƒê·ªçc file Excel
# wb = openpyxl.load_workbook(excel_file)
# ws = wb.active

# # Kh·ªüi t·∫°o tr√¨nh duy·ªát
# driver = webdriver.Chrome()
# wait = WebDriverWait(driver, 15)  # Timeout 15 gi√¢y ƒë·ªÉ ch·ªù trang load

# # 1. M·ªû TRANG ƒêƒÇNG NH·∫¨P
# driver.get("https://nodejs-ck-x8q8.onrender.com/login")

# # 2. ƒêƒÇNG NH·∫¨P
# try:
#     email = wait.until(EC.presence_of_element_located((By.ID, "email")))
#     password = driver.find_element(By.ID, "password")
#     email.send_keys("admin@gmail.com")  # Thay b·∫±ng t√†i kho·∫£n th·∫≠t
#     password.send_keys("123456")        # Thay b·∫±ng m·∫≠t kh·∫©u th·∫≠t
#     password.send_keys(Keys.ENTER)
#     print("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng")
# except Exception as e:
#     print(f"‚ùå L·ªói ƒëƒÉng nh·∫≠p: {e}")
#     driver.quit()
#     exit()

# # 3. CH·ªú TRANG LOAD XONG V√Ä NH·∫§N "PRODUCTS"
# try:
#     products_button = wait.until(
#         EC.element_to_be_clickable((By.XPATH, "//a[@href='/product' and text()='Products']"))
#     )
#     driver.execute_script("arguments[0].scrollIntoView(true);", products_button)
#     time.sleep(0.5)
#     products_button.click()
#     print("‚úÖ ƒê√£ nh·∫•n v√†o menu 'Products'")
# except Exception as e:
#     print(f"‚ùå Kh√¥ng th·ªÉ nh·∫•n v√†o 'Products': {e}")
#     driver.quit()
#     exit()

# # 4. CH·ªú C√ÅC S·∫¢N PH·∫®M XU·∫§T HI·ªÜN
# try:
#     wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "div.desc")))
#     print("‚úÖ ƒê√£ t√¨m th·∫•y c√°c s·∫£n ph·∫©m")
# except Exception as e:
#     print(f"‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m: {e}")
#     driver.quit()
#     exit()

# # 5. L·∫∂P TEST THEO FILE EXCEL
# for row in range(2, ws.max_row + 1):
#     test_id = ws.cell(row=row, column=1).value
#     product_name = ws.cell(row=row, column=2).value
#     product_id = ws.cell(row=row, column=3).value
#     expected_result = ws.cell(row=row, column=4).value

#     print(f"üõí {test_id}: ƒêang th·ª≠ th√™m '{product_name}' (ID: {product_id}) v√†o gi·ªè...")

#     try:
#         # T√¨m ph·∫ßn t·ª≠ ch·ª©a s·∫£n ph·∫©m (div.desc) d·ª±a tr√™n product_id
#         product_container = wait.until(EC.presence_of_element_located(
#             (By.XPATH, f"//div[@class='desc']//button[@data-product-id='{product_id}']/ancestor::div[@class='desc']"))
#         )

#         # Scroll t·ªõi s·∫£n ph·∫©m
#         driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", product_container)
#         time.sleep(0.5)

#         # Th·ª±c hi·ªán hover l√™n s·∫£n ph·∫©m
#         actions = ActionChains(driver)
#         actions.move_to_element(product_container).perform()
#         time.sleep(0.5)  # Ch·ªù n√∫t "Add to Cart" hi·ªán ra

#         # T√¨m v√† nh·∫•n n√∫t "Add to Cart"
#         button = wait.until(EC.element_to_be_clickable(
#             (By.CSS_SELECTOR, f"div.desc button.btn-add-to-cart[data-product-id='{product_id}']"))
#         )
#         button.click()
#         time.sleep(1)

#         actual_result = "Add to cart success"
#         status = "PASSED" if actual_result == expected_result else "FAILED"

#     except Exception as e:
#         actual_result = f"Error: {str(e)}"
#         status = "FAILED"

#     # Ghi k·∫øt qu·∫£
#     ws.cell(row=row, column=5, value=actual_result)
#     ws.cell(row=row, column=6, value=status)

# # 6. L∆ØU FILE K·∫æT QU·∫¢
# wb.save(report_file)
# driver.quit()
# print(f"‚úÖ ƒê√£ ho√†n th√†nh ki·ªÉm th·ª≠. B√°o c√°o l∆∞u t·∫°i: {report_file}")

import time
import openpyxl
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains

# === C·∫§U H√åNH FILE ===
excel_file = r"D:\Tester2\test_web_project\data_report\add_to_cart\product_test_cases.xlsx"
report_file = r"D:\Tester2\test_web_project\data_report\add_to_cart\product_test_report.xlsx"

# ƒê·ªçc file Excel
wb = openpyxl.load_workbook(excel_file)
ws = wb.active

# Kh·ªüi t·∫°o tr√¨nh duy·ªát
driver = webdriver.Chrome()
wait = WebDriverWait(driver, 15)  # Timeout 15 gi√¢y ƒë·ªÉ ch·ªù trang load

# 1. M·ªû TRANG ƒêƒÇNG NH·∫¨P
driver.get("https://nodejs-ck-x8q8.onrender.com/login")

# 2. ƒêƒÇNG NH·∫¨P
try:
    email = wait.until(EC.presence_of_element_located((By.ID, "email")))
    password = driver.find_element(By.ID, "password")
    email.send_keys("admin@gmail.com")  # Thay b·∫±ng t√†i kho·∫£n th·∫≠t
    password.send_keys("123456")        # Thay b·∫±ng m·∫≠t kh·∫©u th·∫≠t
    password.send_keys(Keys.ENTER)
    print("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng")
except Exception as e:
    print(f"‚ùå L·ªói ƒëƒÉng nh·∫≠p: {e}")
    driver.quit()
    exit()

# 3. CH·ªú TRANG LOAD XONG V√Ä NH·∫§N "PRODUCTS"
try:
    products_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//a[@href='/product' and text()='Products']"))
    )
    driver.execute_script("arguments[0].scrollIntoView(true);", products_button)
    time.sleep(0.5)
    products_button.click()
    print("‚úÖ ƒê√£ nh·∫•n v√†o menu 'Products'")
except Exception as e:
    print(f"‚ùå Kh√¥ng th·ªÉ nh·∫•n v√†o 'Products': {e}")
    driver.quit()
    exit()

# 4. CH·ªú C√ÅC S·∫¢N PH·∫®M XU·∫§T HI·ªÜN
try:
    wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "div.desc")))
    print("‚úÖ ƒê√£ t√¨m th·∫•y c√°c s·∫£n ph·∫©m")
except Exception as e:
    print(f"‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m: {e}")
    driver.quit()
    exit()

# 5. L·∫∂P TEST THEO FILE EXCEL
for row in range(2, ws.max_row + 1):
    test_id = ws.cell(row=row, column=1).value
    product_name = ws.cell(row=row, column=2).value
    product_id = ws.cell(row=row, column=3).value
    quantity = ws.cell(row=row, column=4).value  # ƒê·ªçc c·ªôt Quantity
    expected_result = ws.cell(row=row, column=5).value

    print(f"üõí {test_id}: ƒêang th·ª≠ th√™m '{product_name}' (ID: {product_id}) v·ªõi s·ªë l∆∞·ª£ng {quantity} v√†o gi·ªè...")

    try:
        # T√¨m ph·∫ßn t·ª≠ ch·ª©a s·∫£n ph·∫©m (div.desc) d·ª±a tr√™n product_id
        product_container = wait.until(EC.presence_of_element_located(
            (By.XPATH, f"//div[@class='desc']//button[@data-product-id='{product_id}']/ancestor::div[@class='desc']"))
        )

        # Scroll t·ªõi s·∫£n ph·∫©m
        driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", product_container)
        time.sleep(0.5)

        # Th·ª±c hi·ªán hover l√™n s·∫£n ph·∫©m
        actions = ActionChains(driver)
        actions.move_to_element(product_container).perform()
        time.sleep(0.5)  # Ch·ªù n√∫t "Add to Cart" hi·ªán ra

        # Nh·∫•n n√∫t "Add to Cart" theo s·ªë l∆∞·ª£ng y√™u c·∫ßu
        button = wait.until(EC.element_to_be_clickable(
            (By.CSS_SELECTOR, f"div.desc button.btn-add-to-cart[data-product-id='{product_id}']"))
        )
        for _ in range(int(quantity)):  # Nh·∫•n n√∫t s·ªë l·∫ßn b·∫±ng quantity
            button.click()
            time.sleep(1)  # Ch·ªù sau m·ªói l·∫ßn nh·∫•n ƒë·ªÉ ƒë·∫£m b·∫£o h·ªá th·ªëng x·ª≠ l√Ω

        actual_result = f"Add {quantity} to cart success"
        status = "PASSED" if actual_result.startswith("Add") and expected_result == "Add to cart success" else "FAILED"

    except Exception as e:
        actual_result = f"Error: {str(e)}"
        status = "FAILED"

    # Ghi k·∫øt qu·∫£
    ws.cell(row=row, column=6, value=actual_result)
    ws.cell(row=row, column=7, value=status)

# 6. L∆ØU FILE K·∫æT QU·∫¢
wb.save(report_file)
driver.quit()
print(f"‚úÖ ƒê√£ ho√†n th√†nh ki·ªÉm th·ª≠. B√°o c√°o l∆∞u t·∫°i: {report_file}")